name: test

on:
  push:
    # branches: main
  pull_request_target:

concurrency:
  group: test-${{ github.head_ref }}
  cancel-in-progress: true

env:
  PYTHONUNBUFFERED: "1"
  FORCE_COLOR: "1"

jobs:
  unit_tests:
    name: ${{ matrix.platform.name }} with Python ${{ matrix.python-version }} on ${{ startsWith(matrix.os, 'macos-') && 'macOS' || startsWith(matrix.os, 'windows-') && 'Windows' || 'Linux' }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']
        platform:
          - name: Heroku
            platform: heroku
            test_path: platforms/heroku
          - name: Fly.io
            platform: fly_io
            test_path: platforms/fly_io
          - name: Platform.sh
            platform: platform_sh
            test_path: platforms/platform_sh
          - name: Platform Agnostic
            platform: platform_agnostic
            test_path: platform_agnostic_tests
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Update pip
      run: python -m pip install --upgrade pip 
    - name: Install dependencies
      run: python -m pip install -r requirements.txt
    - name: Run tests
      run: |
        cd unit_tests
        pytest platforms/${{ matrix.platform.platform }}/ --basetemp=dsd_temp
    - name: Compress test results
      if: always()
      run: |
        cd unit_tests
        7z a -tzip dsd_temp.zip dsd_temp/*current
    - name: Upload artifacts
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.platform.platform }}-py${{ matrix.python-version }}-${{ matrix.os }}
        path: ./unit_tests/dsd_temp.zip