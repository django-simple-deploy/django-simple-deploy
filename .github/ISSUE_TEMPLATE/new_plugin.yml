name: Building a new plugin
description: Proposal to build a new plugin, targeting an unsupported platform or a different approach to deploying to that platform.
title: "[New plugin]: "
labels: ["plugin work", "feature request"

body:
  - type: markdown
    attributes:
      value: |
        Thank you for trying to make it easier to deploy Django projects. :)

        This issue template was written before the plugin system was implemented. The questions in this template are worth thinking through, but don't feel the need to fill them all out here. Some of them are no longer relavant; this template is going to be converted to a documentation page in the the [plugins](https://django-simple-deploy.readthedocs.io/en/latest/plugins/) section. If you haven't already seen it, take a look at the [plugin template](https://github.com/django-simple-deploy/dsd-plugin-template) repository.

  - type: input
    attributes:
      label: Platform
      description: What platform are you proposing to build support for?

  - type: textarea
    attributes:
      label: Your connection
      description: What's your connection with this platform? (Do you work for this company, have you used it a lot, or are you just looking to build support for the platform?)

  - type: markdown
    attributes:
      value: |
        Platforms that are a good fit for `django-simple-deploy` support have a mostly scriptable deployment process. If there's much work that needs to be done on a web portal, for example, the platform may not be a good fit for `django-simple-deploy`. (It's difficult to write e2e tests for processes that aren't fully scriptable.) However, I can see situations where `simple_deploy` is good for automating configuration, regardless of what other steps are necessary to complete the deployment.

  - type: textarea
    attributes:
      label: Rationale
      description: Briefly, why do you think this would be a good platform for `django-simple-deploy` to support?

  - type: markdown
    attributes:
      value: |
        Most platforms ask users to make some decisions during the initial deployment process: which resources will be created, what size will those resources be, etc. Can you make, and justify, good default decisions for users? (We can consider adding some [CLI args](https://django-simple-deploy.readthedocs.io/en/latest/general_documentation/cli_reference/) that allow users to customize configuration, but if we're exposing too much of a platform's CLI then we might not be simplifying the process enough.)

  - type: textarea
    attributes:
      label: CLI arguments
      description: Will supporting this platform require the introduction of any new CLI arguments? If so, what are they, and why are they necessary?


  - type: markdown
    attributes:
      value: |
        Every platform has a Quick Start guide; here's the guide for [deployment to Fly.io](https://django-simple-deploy.readthedocs.io/en/latest/quick_starts/quick_start_flyio/). You don't have to write the Quick Start guide for this platform right now, but you should be clear about what it would look like.

  - type: textarea
    attributes:
      label: "Quick Start: Configuration-only deployment"
      description: What would the configuration-only deployment process look like for this platform? Please write this as a bulleted list, or as a series of commands like you see in the Fly.io Quick Start guide. Please mention any prerequisites for deployment to this platform as well. (In the configuration mode, you may have to create some resources on the user's behalf in order to carry out the configuration. The goal is to *only* create resources that we can't easily ask the user to create before running `simple_deploy`.)

  - type: textarea
    attributes:
      label: Technical notes
      description: Briefly describe the changes that `simple_deploy --platform PLATFORM_NAME` would make to the user's project. What new files would be added to their project? What modifications to existing files would be made, such as settings.py? Can you point to an example of these files and changes?

  - type: textarea
    attributes:
      label: Authentication issues
      description: Authentication for all currently supported platforms happens through the CLI. We don't need to handle authentication at all; if users are not currently logged in, the platform's CLI prompts for a login in a way that doesn't interrupt the configuration or deployment process. Do you foresee any issues with authentication for this platform? If so, what are they, and how would we handle them?

  - type: textarea
    attributes:
      label: Implementing support for `--automate-all`
      description: All currently supported platforms support the `--automate-all` flag, although this is not a requirement. Is it possible to support an automated deployment process for this platform? If not, what steps block full automation?

  - type: markdown
    attributes:
      value: |
        The goal of `simple_deploy` is to simplify the initial configuration and deployment process. We want to simplify the path to a working initial deployment, but also help users start to build an understanding of the platform they've chosen, so they can maintain their deployment. For example, the final output message for a successful configuration informs users (briefly) how they can push subsequent changes to their project. We are also going to write a friendly log file that summarizes the configuration that was done, tells people how to push their next set of changes, and provides links to the most important parts of their platform's documentation.
  
  - type: textarea
    attributes:
      label: Followup support
      description: How easily can you describe the next steps for maintaining the deployment? What are the steps to push subsequent changes to the project?

  - type: textarea
    attributes:
      label: Ongoing maintenance
      description: Who do you imagine will take care of ongoing maintenance for supporting this platform? Is there anyone who works for this platform that we can contact for advice on building and maintaining an appropriate configuration and deployment process for this platform in the long term?

  - type: markdown
    attributes:
      value: "## Technical notes"

  - type: markdown
    attributes:
      value: |
        For more information about writing a new plugin, see the [plugin template](https://github.com/django-simple-deploy/dsd-plugin-template) repository.

  - type: markdown
    attributes:
      value: "## Thank you"

  - type: markdown
    attributes:
      value: |
        Again, thank you for expressing interest in simplifying the deployment process for Django developers. This automated approach can help everyone, from beginners to seasoned Django experts.